{"ast":null,"code":"import _objectSpread from \"/Users/reysantos7/Documents/HelpMate/HelpMate/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/reysantos7/Documents/HelpMate/HelpMate/frontend/src/components/common/form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const _Joi$validate = Joi.validate(this.state.data, this.schema, {\n        abortEarly: false\n      }),\n            error = _Joi$validate.error;\n\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      console.log(errors);\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n\n      const _Joi$validate2 = Joi.validate(obj, schema),\n            error = _Joi$validate2.error;\n\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = _objectSpread({}, this.state.errors);\n\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n\n      const data = _objectSpread({}, this.state.data);\n\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n  }\n\n  renderButton(label) {\n    return React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: this.validate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, label);\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n    return React.createElement(Input, {\n      type: type,\n      name: name,\n      value: data[name],\n      label: label,\n      onChange: this.handleChange,\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }\n\n  renderSelect(name, label, options) {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          errors = _this$state2.errors;\n    return React.createElement(Select, {\n      name: name,\n      value: data[name],\n      label: label,\n      options: options,\n      onChange: this.handleChange,\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/reysantos7/Documents/HelpMate/HelpMate/frontend/src/components/common/form.jsx"],"names":["React","Component","Joi","Input","Select","Form","state","data","errors","validate","schema","abortEarly","error","item","details","path","message","console","log","validateProperty","name","value","obj","handleSubmit","event","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMessage","renderButton","label","renderInput","type","renderSelect","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const { error } = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false\n    });\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    console.log(errors);\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}