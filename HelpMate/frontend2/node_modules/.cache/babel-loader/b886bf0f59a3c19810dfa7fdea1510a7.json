{"ast":null,"code":"import _objectSpread from \"/Users/reysantos7/Documents/HelpMate/HelpMate/frontend2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/reysantos7/Documents/HelpMate/HelpMate/frontend2/src/components/registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport trainerService from \"../services/trainerService\";\nimport teamService from \"../services/teamService\";\nimport auth from \"../services/authService\";\nimport _ from \"lodash\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        birthday: \"\",\n        gender: \"\",\n        team: \"\",\n        isGymLeader: \"\"\n      },\n      genders: [{\n        _id: \"Male\",\n        name: \"male\"\n      }, {\n        _id: \"Female\",\n        name: \"female\"\n      }],\n      isGymLeader: [{\n        _id: true,\n        name: \"True\"\n      }, {\n        _id: false,\n        name: \"False\"\n      }],\n      types: [],\n      teams: [],\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      password: Joi.string().min(5).required().label(\"Password\"),\n      birthday: Joi.date().required().label(\"Birthday\"),\n      gender: Joi.string().required().label(\"Gender\"),\n      team: Joi.string().required().label(\"Team\"),\n      isGymLeader: Joi.boolean().required().label(\"Gym leader\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const _ref = await trainerService.register(this.state.data),\n              response = _ref.data;\n\n        auth.loginWithJwt(response.token);\n        window.location = \"/\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = _objectSpread({}, this.state.errors);\n\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  async populateTeams() {\n    let _ref2 = await teamService.getTeams(),\n        teams = _ref2.data;\n\n    teams = teams.sort();\n    teams = teams.map(team => ({\n      _id: team,\n      name: _.capitalize(team)\n    }));\n    this.setState({\n      teams\n    });\n  }\n\n  async componentDidMount() {\n    await this.populateTeams();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderInput(\"Email\", \"Email\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"First Name\", \"Name\"), this.renderInput(\"Last Name\", \"Last Name\"), this.renderInput(\"Age\", \"Age\", \"number\"), this.renderSelect(\"gender\", \"Gender\", this.state.genders), this.renderInput(\"Major\", \"Major\"), this.renderInput(\"Semester\", \"Semester\", \"number\"), this.renderButton(\"Register\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/reysantos7/Documents/HelpMate/HelpMate/frontend2/src/components/registerForm.jsx"],"names":["React","Joi","Form","trainerService","teamService","auth","_","RegisterForm","state","data","username","password","birthday","gender","team","isGymLeader","genders","_id","name","types","teams","errors","schema","string","required","label","min","date","boolean","doSubmit","register","response","loginWithJwt","token","window","location","ex","status","setState","populateTeams","getTeams","sort","map","capitalize","componentDidMount","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport trainerService from \"../services/trainerService\";\nimport teamService from \"../services/teamService\";\nimport auth from \"../services/authService\";\nimport _ from \"lodash\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      birthday: \"\",\n      gender: \"\",\n      team: \"\",\n      isGymLeader: \"\"\n    },\n    genders: [{ _id: \"Male\", name: \"male\" }, { _id: \"Female\", name: \"female\" }],\n    isGymLeader: [{ _id: true, name: \"True\" }, { _id: false, name: \"False\" }],\n    types: [],\n    teams: [],\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .min(5)\n      .required()\n      .label(\"Password\"),\n    birthday: Joi.date()\n      .required()\n      .label(\"Birthday\"),\n    gender: Joi.string()\n      .required()\n      .label(\"Gender\"),\n    team: Joi.string()\n      .required()\n      .label(\"Team\"),\n    isGymLeader: Joi.boolean()\n      .required()\n      .label(\"Gym leader\")\n  };\n\n  async populateTeams() {\n    let { data: teams } = await teamService.getTeams();\n    teams = teams.sort();\n    teams = teams.map(team => ({ _id: team, name: _.capitalize(team) }));\n    this.setState({ teams });\n  }\n\n  async componentDidMount() {\n    await this.populateTeams();\n  }\n\n  doSubmit = async () => {\n    try {\n      const { data: response } = await trainerService.register(this.state.data);\n      auth.loginWithJwt(response.token);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"Email\", \"Email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"First Name\", \"Name\")}\n          {this.renderInput(\"Last Name\", \"Last Name\")}\n          {this.renderInput(\"Age\", \"Age\", \"number\")}\n          {this.renderSelect(\"gender\", \"Gender\", this.state.genders)}\n          {this.renderInput(\"Major\", \"Major\")}\n          {this.renderInput(\"Semester\", \"Semester\", \"number\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}