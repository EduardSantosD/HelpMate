{"ast":null,"code":"var _jsxFileName = \"/Users/reysantos7/Documents/HelpMate/HelpMate/frontend2/src/components/pokeList.jsx\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport PokeTable from \"./pokeTable\";\nimport typesService from \"../services/typeService\";\nimport pokemonService from \"../services/pokemonService\";\nimport _ from \"lodash\";\n\nclass PokeList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: [],\n      types: [],\n      currentPage: 1,\n      pageSize: 20,\n      columns: 4,\n      searchQuery: \"\",\n      selectedType: null,\n      sortColumn: {\n        path: \"number\",\n        order: \"asc\"\n      },\n      totalCount: null\n    };\n\n    this.handleTypeSelect = async type => {\n      await this.populatePokemon(1, type);\n    };\n\n    this.handlePageChange = async page => {\n      await this.populatePokemon(page, this.state.selectedType);\n    };\n  }\n\n  async populatePokemon(currentPage = 1, selectedType = null) {\n    let newTotalCount = undefined;\n\n    if (this.state.totalCount === null || selectedType !== this.state.selectedType) {\n      const _ref = await pokemonService.getPokemonCount(selectedType ? selectedType._id : null),\n            data = _ref.data;\n\n      newTotalCount = data.totalCount;\n    }\n\n    let _ref2 = await pokemonService.getPokemon(selectedType ? selectedType._id : null, currentPage),\n        pokemon = _ref2.data;\n\n    pokemon = _.chunk(pokemon, this.state.columns);\n    this.setState({\n      pokemon,\n      currentPage,\n      selectedType,\n      totalCount: newTotalCount || this.state.totalCount\n    });\n  }\n\n  async componentDidMount() {\n    let _ref3 = await typesService.getTypes(),\n        types = _ref3.data;\n\n    types = types.sort();\n    types = types.map(type => ({\n      _id: type,\n      name: _.capitalize(type)\n    }));\n    types = [{\n      _id: \"\",\n      name: \"All types\"\n    }, ...types];\n    this.setState({\n      types\n    });\n    await this.populatePokemon();\n  }\n\n  render() {\n    const _this$state = this.state,\n          types = _this$state.types,\n          pokemon = _this$state.pokemon,\n          selectedType = _this$state.selectedType,\n          totalCount = _this$state.totalCount,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      items: types,\n      selectedItem: selectedType,\n      onItemSelect: this.handleTypeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(PokeTable, {\n      pokemon: pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PokeList;","map":{"version":3,"sources":["/Users/reysantos7/Documents/HelpMate/HelpMate/frontend2/src/components/pokeList.jsx"],"names":["React","Component","ListGroup","Pagination","PokeTable","typesService","pokemonService","_","PokeList","state","pokemon","types","currentPage","pageSize","columns","searchQuery","selectedType","sortColumn","path","order","totalCount","handleTypeSelect","type","populatePokemon","handlePageChange","page","newTotalCount","undefined","getPokemonCount","_id","data","getPokemon","chunk","setState","componentDidMount","getTypes","sort","map","name","capitalize","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport PokeTable from \"./pokeTable\";\nimport typesService from \"../services/typeService\";\nimport pokemonService from \"../services/pokemonService\";\nimport _ from \"lodash\";\n\nclass PokeList extends Component {\n  state = {\n    pokemon: [],\n    types: [],\n    currentPage: 1,\n    pageSize: 20,\n    columns: 4,\n    searchQuery: \"\",\n    selectedType: null,\n    sortColumn: { path: \"number\", order: \"asc\" },\n    totalCount: null\n  };\n\n  async populatePokemon(currentPage = 1, selectedType = null) {\n    let newTotalCount = undefined;\n    if (\n      this.state.totalCount === null ||\n      selectedType !== this.state.selectedType\n    ) {\n      const { data } = await pokemonService.getPokemonCount(\n        selectedType ? selectedType._id : null\n      );\n      newTotalCount = data.totalCount;\n    }\n\n    let { data: pokemon } = await pokemonService.getPokemon(\n      selectedType ? selectedType._id : null,\n      currentPage\n    );\n    pokemon = _.chunk(pokemon, this.state.columns);\n    this.setState({\n      pokemon,\n      currentPage,\n      selectedType,\n      totalCount: newTotalCount || this.state.totalCount\n    });\n  }\n\n  async componentDidMount() {\n    let { data: types } = await typesService.getTypes();\n    types = types.sort();\n    types = types.map(type => ({ _id: type, name: _.capitalize(type) }));\n    types = [{ _id: \"\", name: \"All types\" }, ...types];\n\n    this.setState({ types });\n    await this.populatePokemon();\n  }\n\n  handleTypeSelect = async type => {\n    await this.populatePokemon(1, type);\n  };\n\n  handlePageChange = async page => {\n    await this.populatePokemon(page, this.state.selectedType);\n  };\n\n  render() {\n    const {\n      types,\n      pokemon,\n      selectedType,\n      totalCount,\n      pageSize,\n      currentPage\n    } = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={types}\n            selectedItem={selectedType}\n            onItemSelect={this.handleTypeSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <PokeTable pokemon={pokemon} />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PokeList;\n"]},"metadata":{},"sourceType":"module"}